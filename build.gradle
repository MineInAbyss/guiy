plugins {
    id 'java'
    id 'idea'
    id "maven-publish"
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

if (project.hasProperty("buildNo")) version += ".$buildNo"

def github_username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
def github_password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")

repositories {
    mavenCentral()
    jcenter()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'dre-repo'
        url = 'https://erethon.de/repo/'
    }
    maven {
        name = "CultOfClang"
        url = uri("https://maven.pkg.github.com/CultOfClang/Minecraft/")
        credentials {
            username = github_username
            password = github_password
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    getArchiveClassifier().set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    getArchiveClassifier().set('javadoc')
    from javadoc.destinationDir
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/MineInAbyss/guiy")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

dependencies {
    if (project.hasProperty("useLocalKotlinSpice") && useLocalKotlinSpice.toBoolean()) compileOnly "org.cultofclang.minecraft:kotlinspice"
    else compileOnly "org.cultofclang.minecraft:kotlinspice:1.3.71+"

    testImplementation 'junit:junit:4.12'
    implementation 'de.erethon:headlib:3.0.2'
    compileOnly 'org.spigotmc:spigot-api:1.15-R0.1-SNAPSHOT'
    implementation 'com.google.protobuf:protobuf-java:3.8.0'
    implementation 'com.google.dagger:dagger:2.+'
    compileOnly 'org.jetbrains:annotations:17.0.0'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.+'
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        freeCompilerArgs += "-Xjvm-default=compatibility"
    }
}
compileTestKotlin { kotlinOptions { jvmTarget = "1.8" } }